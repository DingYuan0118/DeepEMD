model
DataParallel(
  (module): DeepEMD(
    (encoder): ResNet(
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): LeakyReLU(negative_slope=0.1)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (downsample): Sequential(
            (0): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (layer2): Sequential(
        (0): DeformBasicBlock(
          (conv1): DeformConv2dPack(in_channels=64,
          out_channels=160,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): LeakyReLU(negative_slope=0.1)
          (conv2): DeformConv2dPack(in_channels=160,
          out_channels=160,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): DeformConv2dPack(in_channels=160,
          out_channels=160,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (downsample): Sequential(
            (0): Conv2d(64, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (layer3): Sequential(
        (0): DeformBasicBlock(
          (conv1): DeformConv2dPack(in_channels=160,
          out_channels=320,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): LeakyReLU(negative_slope=0.1)
          (conv2): DeformConv2dPack(in_channels=320,
          out_channels=320,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): DeformConv2dPack(in_channels=320,
          out_channels=320,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (downsample): Sequential(
            (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (layer4): Sequential(
        (0): DeformBasicBlock(
          (conv1): DeformConv2dPack(in_channels=320,
          out_channels=640,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): LeakyReLU(negative_slope=0.1)
          (conv2): DeformConv2dPack(in_channels=640,
          out_channels=640,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): DeformConv2dPack(in_channels=640,
          out_channels=640,
          kernel_size=(3, 3),
          stride=(1, 1),
          padding=(1, 1),
          dilation=(1, 1),
          groups=1,
          deform_groups=1,
          deform_groups=False)
          (bn3): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (downsample): Sequential(
            (0): Conv2d(320, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (dropout): Dropout(p=0.0, inplace=False)
    )
    (fc): Linear(in_features=640, out_features=64, bias=True)
  )
)